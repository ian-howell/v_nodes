- set_fact:
    libvirt_domain_name: "{{ vm.node_name }}-{{ vm_instance }}"
  run_once: yes

- set_fact:
    bridge_name: "br-{{ 1000 | random }}"
  run_once: yes

- name: "Create qemu image extra block devices"
  shell: |
        qemu-img create \
            -f qcow2 \
            "{{ vm.image_pool }}/{{ libvirt_domain_name }}-{{ item }}".qcow2 "{{ vm.block_size }}"
  with_sequence: start=1 end="{{ vm.block_devs | int }}"

- name: "Create bridge"
  shell: brctl addbr "{{ bridge_name }}"

- name: "setfacl"
  shell: "setfacl -m u:libvirt-qemu:r-x {{ vm.image_pool }}"

- name: "Create MAC address"
  shell: echo "00:60:2f$(od -txC -An -N3 /dev/random|tr \  :)"
  register: macaddr

- name: Define vm xml
  shell: |
    virt-install \
       --connect "{{ vm.uri }}" \
       --os-variant "{{ vm.os_variant }}" \
       --name "{{ libvirt_domain_name }}" \
       --memory "{{ vm.memory }}" \
       --network bridge="{{ bridge_name }}",mac="{{ macaddr.stdout }}" \
       --cpu host-passthrough \
       --vcpus "{{ vm.vcpus | int }}" \
       --import \
       {% for i in range(1, vm.block_devs + 1) %}
        --disk "{{ vm.image_pool }}/{{ libvirt_domain_name }}-{{ i }}.qcow2,bus=scsi,format=qcow2" \
        {% endfor %}
       --nographics \
       --noautoconsole \
       --print-xml
  register: vm_xml

- debug:
    msg: "{{ vm_xml.stdout }}"

- name: Create vm
  virt:
    command: define
    xml: "{{ vm_xml.stdout }}"
