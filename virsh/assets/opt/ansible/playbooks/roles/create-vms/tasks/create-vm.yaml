- set_fact:
    libvirt_domain_name: "{{ vm.node_name[ vm_instance | int ] }}"

- name: "Create qemu image extra block devices"
  shell: |
        qemu-img create \
            -f qcow2 \
            "{{ vm.image_pool }}/{{ libvirt_domain_name }}-{{ item }}".qcow2 "{{ vm.block_size }}"
  with_sequence: start=1 end="{{ vm.block_devs | int }}"

- name: "Create bridge"
  shell: "brctl addbr {{ vm.bridge_name }} || true"

- acl:
    default: true
    path: "{{ vm.image_pool }}"
    entry: "u:libvirt-qemu:r-x"
    state: present

- name: Define vm xml
  shell: |
    virt-install \
        --connect "{{ vm.uri }}" \
        --os-variant "{{ vm.os_variant }}" \
        --machine pc \
        --name "{{ libvirt_domain_name }}" \
        --memory "{{ vm.memory }}" \
        --network network="air_nat",mac="{{ vm.bootMacAddress[ vm_instance | int ] }}" \
        --network network="air_prov",mac="{{ vm.bootMacAddress[ vm_instance | int ] }}" \
        --cpu host-passthrough \
        --vcpus "{{ vm.vcpus | int }}" \
        --import \
        {% for i in range(1, vm.block_devs + 1) %}
        --disk "{{ vm.image_pool }}/{{ libvirt_domain_name }}-{{ i }}.qcow2,bus=scsi,format=qcow2" \
        {% endfor %}
        --nographics \
        --noautoconsole \
        --print-xml
  register: vm_xml

- debug:
    msg: "{{ vm_xml }}"

- name: Create vm
  virt:
    command: define
    xml: "{{ vm_xml.stdout }}"
